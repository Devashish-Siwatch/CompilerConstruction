DECLARE		3		declare
MODULE		3		module
ID		3		compute
SEMICOL		3		;
DRIVERDEF		4		<<<
DRIVER		4		driver
PROGRAM		4		program
DRIVERENDDEF		4		>>>
START		5		start
DECLARE		6		declare
ID		6		var_1_
COMMA		6		,
ID		6		var_2_
COMMA		6		,
ID		6		var_3_
COLON		6		:
INTEGER		6		integer
SEMICOL		6		;
DECLARE		7		declare
ID		7		R1_abc
COLON		7		:
BOOLEAN		7		boolean
SEMICOL		7		;
DECLARE		8		declare
ID		8		r2_ABC
COLON		8		:
INTEGER		8		integer
SEMICOL		8		;
DECLARE		9		declare
ID		9		R3_abc
COLON		9		:
REAL		9		real
SEMICOL		9		;
GET_VALUE		10		get_value
BO		10		(
ID		10		var_1_
BC		10		)
SEMICOL		10		;
ID		11		var_2_
ASSIGNOP		11		:=
NUM		11		10
SEMICOL		11		;
ID		12		var_3_
ASSIGNOP		12		:=
MINUS		12		-
BO		12		(
NUM		12		6
BC		12		)
SEMICOL		12		;
SQBO		13		[
ID		13		R1_abc
COMMA		13		,
ID		13		r2_ABC
COMMA		13		,
ID		13		R3_abc
SQBC		13		]
ASSIGNOP		13		:=
USE		13		use
MODULE		13		module
ID		13		compute
WITH		13		with
PARAMETERS		13		parameters
ID		13		var_1_
COMMA		13		,
ID		13		var_2_
COMMA		13		,
ID		13		var_34
SEMICOL		13		;
END		15		end
DEF		16		<<
MODULE		16		module
ID		16		compute
ENDDEF		16		>>
TAKES		17		takes
INPUT		17		input
SQBO		17		[
ID		17		a
COLON		17		:
INTEGER		17		integer
COMMA		17		,
ID		17		b
COLON		17		:
INTEGER		17		integer
COMMA		17		,
ID		17		c
COLON		17		:
INTEGER		17		integer
SQBC		17		]
SEMICOL		17		;
RETURNS		18		returns
SQBO		18		[
ID		18		res_1
COLON		18		:
BOOLEAN		18		boolean
COMMA		18		,
ID		18		res_2_a
COLON		18		:
INTEGER		18		integer
COMMA		18		,
ID		18		res_2__b
COLON		18		:
REAL		18		real
SQBC		18		]
SEMICOL		18		;
START		19		start
DECLARE		20		declare
ID		20		b
COLON		20		:
BOOLEAN		20		boolean
SEMICOL		20		;
ID		21		res_2_a
ASSIGNOP		21		:=
MINUS		21		-
BO		21		(
ID		21		a
MUL		21		*
ID		21		b
MINUS		21		-
ID		21		c
DIV		21		/
NUM		21		5
BC		21		)
SEMICOL		21		;
ID		22		res_2__b
ASSIGNOP		22		:=
BO		22		(
BO		22		(
ID		22		res_2_a
PLUS		22		+
ID		22		a
BC		22		)
MUL		22		*
NUM		22		12
PLUS		22		+
RNUM		22		22.34E-2
BC		22		)
DIV		22		/
NUM		22		13
SEMICOL		22		;
ID		23		b
ASSIGNOP		23		:=
ID		23		a
LE		23		<=
ID		23		b
AND		23		AND
ID		23		c
GE		23		>=
ID		23		a
OR		23		OR
ID		23		a
LT		23		<
NUM		23		0
AND		23		AND
FALSE		23		false
SEMICOL		23		;
ID		24		res_1
ASSIGNOP		24		:=
BO		24		(
TRUE		24		true
AND		24		AND
ID		24		c
EQ		24		==
ID		24		b
BC		24		)
OR		24		OR
BO		24		(
ID		24		b
GT		24		>
ID		24		p
AND		24		AND
BO		24		(
ID		24		a
LE		24		<=
ID		24		c
BC		24		)
BC		24		)
SEMICOL		24		;
PRINT		26		print
BO		26		(
ID		26		res_1
BC		26		)
SEMICOL		26		;
END		27		end
