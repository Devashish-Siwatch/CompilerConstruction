DECLARE              1                    declare             
MODULE               1                    module              
ID                   1                    readArr             
SEMICOL              1                    ;                   
DEF                  3                    <<                  
MODULE               3                    module              
ID                   3                    arraySum            
ENDDEF               3                    >>                  
TAKES                4                    takes               
INPUT                4                    input               
SQBO                 4                    [                   
ID                   4                    list                
COLON                4                    :                   
ARRAY                4                    array               
SQBO                 4                    [                   
NUM                  4                    1                   
RANGEOP              4                    ..                  
NUM                  4                    15                  
SQBC                 4                    ]                   
OF                   4                    of                  
REAL                 4                    real                
COMMA                4                    ,                   
ID                   4                    n                   
INTEGER              4                    integer             
SQBC                 4                    ]                   
SEMICOL              4                    ;                   
RETURNS              5                    returns             
SQBO                 5                    [                   
ID                   5                    sum                 
COLON                5                    :                   
REAL                 5                    real                
SQBC                 5                    ]                   
SEMICOL              5                    ;                   
START                6                    start               
DECLARE              7                    declare             
ID                   7                    index               
COLON                7                    :                   
INTEGER              7                    integer             
SEMICOL              7                    ;                   
DECLARE              8                    declare             
ID                   8                    t                   
COLON                8                    :                   
BOOLEAN              8                    boolean             
SEMICOL              8                    ;                   
ID                   9                    sum                 
RNUM                 9                    0.0                 
SEMICOL              9                    ;                   
FOR                  10                   for                 
BO                   10                   (                   
ID                   10                   index               
ID                   10                   in2                 
NUM                  10                   1                   
RANGEOP              10                   ..                  
NUM                  10                   15                  
BC                   10                   )                   
START                11                   start               
ID                   12                   t                   
ASSIGNOP             12                   :=                  
ID                   12                   index               
LE                   12                   <=                  
ID                   12                   n                   
SEMICOL              12                   ;                   
SWITCH               13                   switch              
BO                   13                   (                   
ID                   13                   t                   
BC                   13                   )                   
START                14                   start               
CASE                 15                   case                
TRUE                 15                   true                
COLON                15                   :                   
PRINT                15                   print               
BO                   15                   (                   
ID                   15                   list                
SQBO                 15                   [                   
ID                   15                   index               
SQBC                 15                   ]                   
BC                   15                   )                   
SEMICOL              15                   ;                   
ID                   16                   sum                 
ASSIGNOP             16                   :=                  
ID                   16                   sum                 
ID                   16                   list                
SQBO                 16                   [                   
ID                   16                   index               
SQBC                 16                   ]                   
SEMICOL              16                   ;                   
BREAK                17                   break               
SEMICOL              17                   ;                   
CASE                 18                   case                
FALSE                18                   false               
COLON                18                   :                   
PRINT                18                   print               
BO                   18                   (                   
ID                   18                   sum                 
BC                   18                   )                   
SEMICOL              18                   ;                   
PRINT                19                   print               
BO                   19                   (                   
ID                   19                   index               
BC                   19                   )                   
SEMICOL              19                   ;                   
BREAK                21                   break               
SEMICOL              21                   ;                   
END                  22                   end                 
END                  24                   end                 
PRINT                25                   print               
BO                   25                   (                   
PLUS                 25                   +                   
ID                   25                   sum                 
BC                   25                   )                   
SEMICOL              25                   ;                   
END                  26                   end                 
DRIVERDEF            27                   <<<                 
DRIVER               27                   driver              
PROGRAM              27                   program             
DRIVERENDDEF         27                   >>>                 
START                28                   start               
DECLARE              29                   declare             
ID                   29                   A                   
COLON                29                   :                   
ARRAY                29                   array               
SQBO                 29                   [                   
NUM                  29                   1                   
RANGEOP              29                   ..                  
NUM                  29                   15                  
SQBC                 29                   ]                   
OF                   29                   of                  
REAL                 29                   real                
SEMICOL              29                   ;                   
DECLARE              30                   declare             
ID                   30                   k                   
COLON                30                   :                   
INTEGER              30                   integer             
SEMICOL              30                   ;                   
DECLARE              31                   declare             
ID                   31                   s                   
COLON                31                   :                   
REAL                 31                   real                
SEMICOL              31                   ;                   
GET_VALUE            32                   get_value           
BO                   32                   (                   
ID                   32                   k                   
BC                   32                   )                   
SEMICOL              32                   ;                   
USE                  33                   use                 
MODULE               33                   module              
ID                   33                   readArr             
WHILE                33                   while               
PARAMETERS           33                   parameters          
ID                   33                   A                   
COMMA                33                   ,                   
ID                   33                   k                   
SEMICOL              33                   ;                   
SQBO                 34                   [                   
ID                   34                   s                   
SQBC                 34                   ]                   
ASSIGNOP             34                   :=                  
USE                  34                   use                 
MODULE               34                   module              
ID                   34                   arraySum            
WITH                 34                   with                
PARAMETERS           34                   parameters          
ID                   34                   A                   
COMMA                34                   ,                   
ID                   34                   k                   
SEMICOL              34                   ;                   
ID                   35                   s                   
ASSIGNOP             35                   :=                  
ID                   35                   s                   
LE                   35                   <=                  
ID                   35                   n                   
GE                   35                   >=                  
ID                   35                   k                   
SEMICOL              35                   ;                   
PRINT                36                   print               
BO                   36                   (                   
ID                   36                   s                   
BC                   36                   )                   
END                  37                   end                 
DEF                  44                   <<                  
MODULE               44                   module              
ID                   44                   readArr             
ENDDEF               44                   >>                  
TAKES                45                   takes               
INPUT                45                   input               
SQBO                 45                   [                   
ID                   45                   arr1                
COLON                45                   :                   
ARRAY                45                   array               
SQBO                 45                   [                   
NUM                  45                   1                   
RANGEOP              45                   ..                  
NUM                  45                   15                  
SQBC                 45                   ]                   
OF                   45                   of                  
REAL                 45                   real                
COMMA                45                   ,                   
ID                   45                   k                   
COLON                45                   :                   
INTEGER              45                   integer             
SQBC                 45                   ]                   
SEMICOL              45                   ;                   
START                46                   start               
DECLARE              47                   declare             
ID                   47                   tempvar             
COLON                47                   :                   
ID                   47                   real23              
SEMICOL              47                   ;                   
DECLARE              48                   declare             
ID                   48                   i                   
COLON                48                   :                   
INTEGER              48                   integer             
SEMICOL              48                   ;                   
ID                   49                   i                   
ASSIGNOP             49                   :=                  
NUM                  49                   1                   
SEMICOL              49                   ;                   
WHILE                50                   while               
BO                   50                   (                   
ID                   50                   i                   
LE                   50                   <=                  
ID                   50                   k                   
BC                   50                   )                   
START                51                   start               
GET_VALUE            52                   get_value           
BO                   52                   (                   
ID                   52                   tempvar             
BC                   52                   )                   
SEMICOL              52                   ;                   
ID                   53                   arr1                
SQBO                 53                   [                   
ID                   53                   i                   
SQBC                 53                   ]                   
ASSIGNOP             53                   :=                  
FOR                  53                   for                 
SEMICOL              53                   ;                   
PRINT                54                   print               
BO                   54                   (                   
ID                   54                   list                
SQBO                 54                   [                   
ID                   54                   P                   
MUL                  54                   *                   
ID                   54                   Q                   
PLUS                 54                   +                   
ID                   54                   index               
SQBC                 54                   ]                   
BC                   54                   )                   
SEMICOL              54                   ;                   
ID                   55                   i                   
ASSIGNOP             55                   :=                  
ID                   55                   i                   
PLUS                 55                   +                   
NUM                  55                   1                   
SEMICOL              55                   ;                   
END                  57                   end                 
END                  58                   end                 
